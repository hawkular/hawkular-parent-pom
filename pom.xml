<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2017 Red Hat, Inc. and/or its affiliates
    and other contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.hawkular</groupId>
  <artifactId>hawkular-parent</artifactId>
  <version>54-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Hawkular Parent</name>
  <description>Hawkular Parent POM</description>
  <url>http://github.com/hawkular</url>
  <inceptionYear>2015</inceptionYear>
  <organization>
    <name>Red Hat, Inc.</name>
    <url>http://redhat.com/</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>ppalaga</id>
      <name>Peter Palaga</name>
      <timezone>Europe/Prague</timezone>
    </developer>
  </developers>

  <mailingLists>
    <mailingList>
      <name>Hawkular Developer List</name>
      <subscribe>https://lists.jboss.org/mailman/listinfo/hawkular-dev</subscribe>
      <unsubscribe>https://lists.jboss.org/mailman/listinfo/hawkular-dev</unsubscribe>
      <archive>http://lists.jboss.org/pipermail/hawkular-dev</archive>
    </mailingList>
  </mailingLists>

  <scm>
    <connection>scm:git:git@github.com:hawkular/hawkular-parent-pom.git</connection>
    <developerConnection>scm:git:git@github.com:hawkular/hawkular-parent-pom.git</developerConnection>
    <url>https://github.com/hawkular/hawkular-parent-pom</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>jira</system>
    <url>https://issues.jboss.org/browse/HAWKULAR</url>
  </issueManagement>
  <distributionManagement>
    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      <url>${jboss.releases.repo.url}</url>
    </repository>
    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshots Repository</name>
      <url>${jboss.snapshots.repo.url}</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>

    <!-- Maven general -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <autoVersionSubmodules>true</autoVersionSubmodules>

    <!-- maven-compiler-plugin -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>

    <!-- Checkstyle and maven-checkstyle-plugin -->
    <version.com.puppycrawl.tools.checkstyle>6.8</version.com.puppycrawl.tools.checkstyle>
    <!-- the default value pointing at checkstyle.xml in hawkular-build-tools -->
    <checkstyle.configLocation>hawkular-checkstyle/checkstyle.xml</checkstyle.configLocation>
    <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
    <checkstyle.failOnError>true</checkstyle.failOnError>
    <hawkular.checkstyle.includes>
      src/**/*.java,
      *.xml,
      src/**/*.xml,
      src/**/*.js,
      *.adoc,
      src/**/*.adoc,
      *.conf,
      src/**/*.conf,
      src/**/*.cql,
      src/**/*.css,
      Dockerfile,
      src/**/Dockerfile,
      src/**/*.groovy,
      *.html,
      src/**/*.html,
      src/**/*.json,
      src/**/*.js.map,
      *.md,
      src/**/*.md,
      *.properties,
      src/**/*.properties,
      *.sh,
      src/**/*.sh,
      *.txt,
      src/**/*.txt,
      *.yml,
      src/**/*.yml,
        src/**/*.xsl,
    src/**/*.yaml,
    </hawkular.checkstyle.includes>
    <hawkular.checkstyle.excludes>
      release.properties,
      **/*.d.ts,
      **/vendor/*.js,
    </hawkular.checkstyle.excludes>
    <!-- the default value pointing at suppressions.xml in hawkular-build-tools -->
    <checkstyle.suppressions.file>hawkular-checkstyle/suppressions.xml</checkstyle.suppressions.file>

    <!-- maven-enforcer-plugin -->
    <!-- Note that ${enforcer.project.version.pattern} has a stricter variant in the release profile -->
    <enforcer.project.version.pattern>^(\d{1,4})(\.\d{1,3}\.\d{1,3}((\.Alpha\d{1,2}|\.Beta\d{1,2}|\.CR\d{1,2}|\.Final)(-\p{Alpha}{1,10}-\d{1,2})?)?)?(-SNAPSHOT|-SRC-.*)?$</enforcer.project.version.pattern>
    <enforcer.project.version.message>Project version must be in the form of one of the following (x,y,z stands for any numbers): "x", "x.y", "x.y.z". There may be also a qualifier at the end. Qualifier can be one of the following: ".AlphaX", ".BetaX", ".CRX", ".Final", where X denotes a number. And there may be also "-SNAPSHOT" or -SRC-.* at the very end.</enforcer.project.version.message>

    <!-- license-maven-plugin -->
    <license.headerTemplatePath>hawkular-license/jboss-apache-2-template.txt</license.headerTemplatePath>
    <license.failIfMissing>true</license.failIfMissing>
    <license.failIfUnknown>true</license.failIfUnknown>

    <!-- -Xdoclint:none disables javadoc validation -->
    <javadoc.doclint>-Xdoclint:none</javadoc.doclint>

    <!-- nexus-staging-maven-plugin -->
    <autoReleaseAfterClose>true</autoReleaseAfterClose>

    <!-- hawkular-build-tools are used by both maven-checkstyle-plugin and lisense-plugin -->
    <version.org.hawkular.hawkular-build-tools>17</version.org.hawkular.hawkular-build-tools>

    <!--
      Maven plugin versions
        Naming convention: version.${artifactId} whenever unique enough; otherwise version.${groupId}.${artifactId}
        Ordering: alphabetic
    -->
    <version.com.github.kongchen.swagger-maven-plugin>3.1.3</version.com.github.kongchen.swagger-maven-plugin>
    <version.com.mycila.license-maven-plugin>2.11</version.com.mycila.license-maven-plugin>
    <version.exec-maven-plugin>1.4.0</version.exec-maven-plugin>
    <version.gatling-maven-plugin>2.1.7</version.gatling-maven-plugin>
    <version.maven-antrun-plugin>1.8</version.maven-antrun-plugin>
    <version.maven-assembly-plugin>2.6</version.maven-assembly-plugin>
    <version.maven-checkstyle-plugin>2.17</version.maven-checkstyle-plugin>
    <version.maven-clean-plugin>3.0.0</version.maven-clean-plugin>
    <version.maven-compiler-plugin>3.5.1</version.maven-compiler-plugin>
    <version.maven-dependency-plugin>2.10</version.maven-dependency-plugin>
    <version.maven-deploy-plugin>2.8.2</version.maven-deploy-plugin>
    <version.maven-ear-plugin>2.10.1</version.maven-ear-plugin>
    <version.maven-ejb-plugin>2.5.1</version.maven-ejb-plugin>
    <version.maven-enforcer-plugin>1.4.1</version.maven-enforcer-plugin>
    <version.maven-failsafe-plugin>2.19.1</version.maven-failsafe-plugin>
    <version.maven-install-plugin>2.5.2</version.maven-install-plugin>
    <version.maven-jar-plugin>2.6</version.maven-jar-plugin>
    <version.maven-javadoc-plugin>2.10.3</version.maven-javadoc-plugin>
    <version.maven-release-plugin>2.5.3</version.maven-release-plugin>
    <version.maven-resources-plugin>2.7</version.maven-resources-plugin>
    <version.maven-site-plugin>3.5</version.maven-site-plugin>
    <version.maven-shade-plugin>2.4.3</version.maven-shade-plugin>
    <version.maven-source-plugin>3.0.0</version.maven-source-plugin>
    <version.maven-surefire-plugin>2.19.1</version.maven-surefire-plugin>
    <version.maven-war-plugin>2.6</version.maven-war-plugin>
    <version.nexus-staging-maven-plugin>1.6.7</version.nexus-staging-maven-plugin>
    <version.org.codehaus.buildnumber-maven-plugin>1.4</version.org.codehaus.buildnumber-maven-plugin>
    <version.org.codehaus.gmavenplus.gmavenplus-plugin>1.5</version.org.codehaus.gmavenplus.gmavenplus-plugin>
    <version.org.codehaus.mojo.build-helper-maven-plugin>1.10</version.org.codehaus.mojo.build-helper-maven-plugin>
    <version.org.codehaus.mojo.xml-maven-plugin>1.0.1</version.org.codehaus.mojo.xml-maven-plugin>
    <version.wildfly-maven-plugin>1.1.0.Final</version.wildfly-maven-plugin>

    <!-- wildfly-server-provisioning-maven-plugin and wildfly-feature-pack-build-maven-plugin -->
    <version.org.wildfly.build>1.1.6.Final</version.org.wildfly.build>

    <!-- Repository Deployment URLs -->
    <jboss.nexus.base.url>https://repository.jboss.org/nexus</jboss.nexus.base.url>
    <jboss.releases.repo.url>${jboss.nexus.base.url}/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
    <jboss.snapshots.repo.url>${jboss.nexus.base.url}/content/repositories/snapshots/</jboss.snapshots.repo.url>

    <!--
      The Internal Bill of Materials (BoM) - i.e. the common dependencies used by Hawkular projects

      Please rely on managed artifacts rather than directly on these properties

      Naming convention: version.${groupId} whenever unique enough; otherwise version.${groupId}.${artifactId}
      Ordering: alphabetic
    -->
    <version.com.datastax.cassandra>3.3.0</version.com.datastax.cassandra>
    <!-- keep in sync with modules/system/layers/base/com/fasterxml/jackson/core of the current WildFly/EAP -->
    <version.com.fasterxml.jackson.core>2.5.4</version.com.fasterxml.jackson.core>
    <!-- keep in sync with modules/system/layers/base/com/google/guava of the current WildFly/EAP -->
    <version.com.google.guava>18.0</version.com.google.guava>
    <version.com.google.protobuf>2.6.1</version.com.google.protobuf>
    <version.com.squareup.okhttp>3.4.2</version.com.squareup.okhttp>
    <!-- com.wordnik is deprecated. Use io.swagger instead. -->
    <version.com.wordnik.swagger>1.3.13</version.com.wordnik.swagger>
    <!-- keep in sync with modules/system/layers/base/org/apache/commons/codec of the current WildFly/EAP -->
    <version.commons-codec>1.10</version.commons-codec>
    <version.commons-configuration>1.10</version.commons-configuration>
    <version.io.gatling.highcharts>2.1.6</version.io.gatling.highcharts>
    <version.io.reactivex>1.2.9</version.io.reactivex>
    <version.io.swagger>1.5.8</version.io.swagger>
    <!-- keep in sync with modules/system/layers/base/org/joda/time of the current WildFly/EAP -->
    <version.joda-time>2.7</version.joda-time>
    <version.org.apache.commons.commons-lang3>3.3.1</version.org.apache.commons.commons-lang3>
    <version.org.codehaus.groovy>2.4.6</version.org.codehaus.groovy>
    <version.org.codehaus.groovy.modules.http-builder>0.7.1</version.org.codehaus.groovy.modules.http-builder>
    <!-- Ideally the org.hamcrest should have the same version here as in junit.
      We need to manage org.hamcrest explicitly, because we use the matchers also in TestNG tests and TestNG
      stopped depending on org.hamcrest -->
    <version.org.hamcrest>1.3</version.org.hamcrest>
    <version.junit>4.12</version.junit>
    <version.org.apache.cassandra>3.0.14</version.org.apache.cassandra>

    <!-- Note that we are maintaining only the version here rather than e.g. importing arquillian-bom -->
    <version.org.jboss.arquillian>1.1.10.Final</version.org.jboss.arquillian>

    <!-- keep in sync with version.org.wildfly -->
    <version.org.jboss.common.jboss-common-beans>2.0.0.Final</version.org.jboss.common.jboss-common-beans>
    <!-- keep in sync with version.org.wildfly.core -->
    <version.org.jboss.jboss-dmr>1.3.0.Final</version.org.jboss.jboss-dmr>
    <!-- keep in sync with version.org.wildfly.core -->
    <version.org.jboss.msc>1.2.6.Final</version.org.jboss.msc>

    <version.org.mockito>1.10.19</version.org.mockito>
    <version.org.testng>6.9.10</version.org.testng>

    <!--
      If you change wildfly versions, refer to the pom in org.wildfly.core:wildfly-core-parent to obtain
      the proper versions for version.org.jboss.jboss-dmr and version.org.jboss.msc and others above since
      those aren't in the BOM so we need to track them ourselves.

      ${version.org.wildfly.bom} can be used to import WildFly BoM in subprojects as follows:
      <dependency>
        <groupId>org.wildfly.bom</groupId>
        <artifactId>wildfly-javaee7</artifactId>
        <version>${version.org.wildfly.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    -->
    <version.org.wildfly>10.0.0.Final</version.org.wildfly>
    <version.org.wildfly.core>2.0.10.Final</version.org.wildfly.core>
    <version.org.wildfly.bom>10.0.1.Final</version.org.wildfly.bom>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!--
        Be very careful when considering a dependency with <scope>import</scope>.
        Other kinds of scope (such as test and provided) do not belong here ar any circumstances.
        Ordering: alphabetic by version property
      -->

      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>${version.com.datastax.cassandra}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${version.com.fasterxml.jackson.core}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${version.com.fasterxml.jackson.core}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.com.fasterxml.jackson.core}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${version.com.google.guava}</version>
      </dependency>

      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${version.com.google.protobuf}</version>
      </dependency>

      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${version.com.squareup.okhttp}</version>
      </dependency>

      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp-ws</artifactId>
        <version>${version.com.squareup.okhttp}</version>
      </dependency>

      <!-- Swagger REST annotations -->
      <!-- com.wordnik is deprecated. Use io.swagger instead. -->
      <dependency>
        <groupId>com.wordnik</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${version.com.wordnik.swagger}</version>
      </dependency>
      <!-- com.wordnik is deprecated. Use io.swagger instead. -->
      <dependency>
        <groupId>com.wordnik</groupId>
        <artifactId>swagger-core_2.10</artifactId>
        <version>${version.com.wordnik.swagger}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${version.commons-codec}</version>
      </dependency>

      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${version.commons-configuration}</version>
      </dependency>

      <dependency>
        <groupId>io.gatling.highcharts</groupId>
        <artifactId>gatling-charts-highcharts</artifactId>
        <version>${version.io.gatling.highcharts}</version>
      </dependency>

      <dependency>
        <groupId>io.reactivex</groupId>
        <artifactId>rxjava</artifactId>
        <version>${version.io.reactivex}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${version.org.apache.commons.commons-lang3}</version>
      </dependency>

      <!-- Swagger REST annotations -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${version.io.swagger}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <version>${version.io.swagger}</version>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${version.joda-time}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.junit}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cassandra</groupId>
        <artifactId>cassandra-all</artifactId>
        <version>${version.org.apache.cassandra}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>${version.org.codehaus.groovy}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy.modules.http-builder</groupId>
        <artifactId>http-builder</artifactId>
        <version>${version.org.codehaus.groovy.modules.http-builder}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${version.org.hamcrest}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.common</groupId>
        <artifactId>jboss-common-beans</artifactId>
        <version>${version.org.jboss.common.jboss-common-beans}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-dmr</artifactId>
        <version>${version.org.jboss.jboss-dmr}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.msc</groupId>
        <artifactId>jboss-msc</artifactId>
        <version>${version.org.jboss.msc}</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.org.mockito}</version>
      </dependency>

      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${version.org.testng}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Ordering: alphabetic by the version property -->

        <plugin>
          <groupId>com.github.kongchen</groupId>
          <artifactId>swagger-maven-plugin</artifactId>
          <version>${version.com.github.kongchen.swagger-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.com.mycila.license-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>io.gatling</groupId>
          <artifactId>gatling-maven-plugin</artifactId>
          <version>${version.gatling-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${version.exec-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${version.maven-antrun-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.maven-assembly-plugin}</version>
          <configuration>
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.maven-checkstyle-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${version.maven-clean-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven-compiler-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>${version.maven-ear-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${version.maven-dependency-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.maven-deploy-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>${version.maven-ejb-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.maven-enforcer-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.maven-failsafe-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${version.maven-install-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.maven-jar-plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <compress>true</compress>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.maven-javadoc-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${version.maven-release-plugin}</version>
          <configuration>
            <tagNameFormat>@{project.version}</tagNameFormat>
            <preparationGoals>package</preparationGoals>
            <goals>deploy</goals>
            <releaseProfiles>release</releaseProfiles>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.maven-resources-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${version.maven-site-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${version.maven-shade-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.maven-source-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.maven-surefire-plugin}</version>
          <configuration>
            <argLine>-Xmx512m</argLine>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${version.maven-war-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${version.nexus-staging-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${version.org.codehaus.buildnumber-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${version.org.codehaus.gmavenplus.gmavenplus-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${version.org.codehaus.mojo.build-helper-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>${version.org.codehaus.mojo.xml-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.wildfly.build</groupId>
          <artifactId>wildfly-feature-pack-build-maven-plugin</artifactId>
          <version>${version.org.wildfly.build}</version>
        </plugin>

        <plugin>
          <groupId>org.wildfly.build</groupId>
          <artifactId>wildfly-server-provisioning-maven-plugin</artifactId>
          <version>${version.org.wildfly.build}</version>
        </plugin>

        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>${version.wildfly-maven-plugin}</version>
          <configuration>
            <version>${version.org.wildfly}</version>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Ordering: same as pluginManagement - alphabetic by the version property -->

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <header>${license.headerTemplatePath}</header>
          <excludes>
            <exclude>**/.bowerrc</exclude>
            <exclude>**/.jshintrc</exclude>
            <exclude>**/LICENSE</exclude>
            <exclude>**/README</exclude>
            <exclude>**/README.*</exclude>
            <exclude>**/.travis.force.build</exclude>
            <exclude>**/*.adoc</exclude>
            <exclude>**/*.d.ts</exclude>
            <exclude>**/*.eot</exclude>
            <exclude>**/*.otf</exclude>
            <exclude>**/*.ttf</exclude>
            <exclude>**/*.svg</exclude>
            <exclude>**/*.woff</exclude>
            <exclude>**/*.html</exclude>
            <exclude>**/*.htm</exclude>
            <exclude>.mvn/jvm.config</exclude>
            <exclude>.mvn/maven.config</exclude>
            <exclude>mvnw</exclude>
            <exclude>mvnw.cmd</exclude>
          </excludes>
          <mapping>
            <conf>SCRIPT_STYLE</conf>
            <cql>DOUBLEDASHES_STYLE</cql>
            <css>SLASHSTAR_STYLE</css>
            <Dockerfile>SCRIPT_STYLE</Dockerfile>
            <drl>SLASHSTAR_STYLE</drl>
            <editorconfig>SCRIPT_STYLE</editorconfig>
            <g4>SLASHSTAR_STYLE</g4>
            <gradle>SLASHSTAR_STYLE</gradle>
            <gradlew>SCRIPT_STYLE</gradlew>
            <groovy>SLASHSTAR_STYLE</groovy>
            <iql>DOUBLEDASHES_STYLE</iql>
            <jshintrc>SLASHSTAR_STYLE</jshintrc>
            <java>SLASHSTAR_STYLE</java>
            <less>SLASHSTAR_STYLE</less>
            <wsdl>XML_STYLE</wsdl>
            <yaml>SCRIPT_STYLE</yaml>
            <yml>SCRIPT_STYLE</yml>
          </mapping>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin-git</artifactId>
            <version>${version.com.mycila.license-maven-plugin}</version>
          </dependency>
          <dependency>
            <groupId>org.hawkular</groupId>
            <artifactId>hawkular-build-tools</artifactId>
            <version>${version.org.hawkular.hawkular-build-tools}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${checkstyle.configLocation}</configLocation>
          <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
          <failsOnError>${checkstyle.failOnError}</failsOnError>
          <!-- Make includes relative to ${basedir} -->
          <sourceDirectory>${basedir}</sourceDirectory>
          <!-- in <includes>, it is necessary to avoid using an item-initial **/ wildcard
               which pulls in also files from all submodules and target folders. We do not want
               that. We rather have to name specific root folder patterns like *.extension
               or directory/**/*.extension -->
          <includes>${hawkular.checkstyle.includes}</includes>
          <excludes>${hawkular.checkstyle.excludes}</excludes>
          <!-- to override in a submodule, just redefine the checkstyle.suppressions.file property
               in the given submodule's pom -->
          <suppressionsLocation>${checkstyle.suppressions.file}</suppressionsLocation>
          <useFile />
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${version.com.puppycrawl.tools.checkstyle}</version>
            <exclusions>
              <exclusion>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.hawkular</groupId>
            <artifactId>hawkular-build-tools</artifactId>
            <version>${version.org.hawkular.hawkular-build-tools}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>check-style</id>
            <phase>verify</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <optimize>true</optimize>
          <debug>true</debug>
          <showDeprecation>true</showDeprecation>
          <!-- Workaround for https://jira.codehaus.org/browse/MCOMPILER-236 present in compiler plugin 3.2 -->
          <useIncrementalCompilation>false</useIncrementalCompilation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-From-Git-SHA1>${buildNumber}</Built-From-Git-SHA1>
              <Built-On>${timestamp}</Built-On>
              <Built-From-Git-Branch>${scmBranch}</Built-From-Git-Branch>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-From-Git-SHA1>${buildNumber}</Built-From-Git-SHA1>
              <Built-On>${timestamp}</Built-On>
              <Built-From-Git-Branch>${scmBranch}</Built-From-Git-Branch>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <requireMavenVersion>
              <version>[3.2.5,)</version>
            </requireMavenVersion>
            <requireJavaVersion>
              <version>[1.8,)</version>
            </requireJavaVersion>
            <requireNoRepositories />
            <requirePluginVersions />
            <requireProperty>
              <!-- stronger version of https://developer.jboss.org/wiki/JBossProjectVersioning -->
              <property>project.version</property>
              <message>Project version must be specified.</message>
              <regex>${enforcer.project.version.pattern}</regex>
              <regexMessage>${enforcer.project.version.message}</regexMessage>
            </requireProperty>
          </rules>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-From-Git-SHA1>${buildNumber}</Built-From-Git-SHA1>
              <Built-On>${timestamp}</Built-On>
              <Built-From-Git-Branch>${scmBranch}</Built-From-Git-Branch>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <configuration>
          <locale>en_US</locale>
          <timestampFormat>{0,date,yyyy-MM-dd'T'HH:mm:ssX}</timestampFormat>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <!-- *.xml and *.xsl are included by default -->
        <executions>
          <execution>
            <id>xml-check-format</id>
            <phase>verify</phase>
            <goals>
              <goal>check-format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <!--
      Ordering: alphabetic by id
    -->

    <profile>
      <id>community.repositories</id>
      <activation>
        <property>
          <name>!disable.community.repositories</name>
        </property>
      </activation>

      <repositories>
        <repository>
          <id>jboss-public-repository-group</id>
          <name>JBoss Public Maven Repository Group</name>
          <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
          <layout>default</layout>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>

      <pluginRepositories>
        <pluginRepository>
          <id>jboss-public-repository-group</id>
          <name>JBoss Public Maven Repository Group</name>
          <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
          <layout>default</layout>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>

    <profile>
      <id>release</id>
      <properties>
        <!-- This makes the buildnumber-maven-plugin fail in case of uncommitted local changes -->
        <maven.buildNumber.doCheck>true</maven.buildNumber.doCheck>

        <!-- maven-enforcer-plugin -->
        <enforcer.project.version.pattern>^(\d{1,4})(\.\d{1,3})?(\.\d{1,3})?((\.Alpha\d{1,2}|\.Beta\d{1,2}|\.CR\d{1,2}|\.Final)(-\p{Alpha}{1,10}-\d{1,2})?)?$</enforcer.project.version.pattern>
        <enforcer.project.version.message>Project version must be in the form of one of the following (x,y,z stands for any numbers): "x", "x.y", "x.y.z". There may be also a qualifier at the end. Qualifier can be one of the following: ".AlphaX", ".BetaX", ".CRX", ".Final", where X denotes a number.</enforcer.project.version.message>

      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <additionalparam>${javadoc.doclint}</additionalparam>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release-guiless</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <nexusUrl>${jboss.nexus.base.url}</nexusUrl>
              <!-- The server "id" element from settings to use authentication from -->
              <serverId>jboss-releases-repository</serverId>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>snapshots</id>
      <repositories>
        <repository>
          <id>snapshots.jboss.org</id>
          <name>JBoss Snapshot Repository</name>
          <url>http://snapshots.jboss.org/maven2</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>

    <profile>
      <id>test.debug</id>
      <activation>
        <property>
          <name>test.debug</name>
        </property>
      </activation>

      <properties>
        <!-- See: http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html#debugForkedProcess -->
        <maven.surefire.debug>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8789,server=y,suspend=y</maven.surefire.debug>
      </properties>
    </profile>

    <!-- Maven modules containing Groovy classes have to activate this profile by adding
      <test.groovy>true</test.groovy> to their properties. -->
    <profile>
      <id>test.groovy</id>
      <activation>
        <file>
          <exists>${basedir}/src/test/groovy</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>addSources</goal>
                  <goal>addTestSources</goal>
                  <goal>compile</goal>
                  <goal>testCompile</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
